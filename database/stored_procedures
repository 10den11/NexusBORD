
//INSERT INTO CLASS

CREATE OR REPLACE PROCEDURE insertClass(Cl_ID IN NUMBER, Co_ID IN Number, Cap IN Number)
IS
BEGIN
INSERT INTO classes VALUES(Cl_ID, Co_ID, Cap);
END insertClass;
/

//INSERT INTO COURSE
CREATE OR REPLACE PROCEDURE insertCourse(Co_ID IN NUMBER, Co_Name IN VARCHAR, Co_Description IN VARCHAR, Co_Level IN VARCHAR)
IS
BEGIN
INSERT INTO courses VALUES (Co_ID, Co_Name, Co_Description, Co_Level);
END insertCourse;
/

//INSERT INTO EMPLOYEE
CREATE OR REPLACE PROCEDURE insertEmp(Emp_Id IN NUMBER, Is_Ins IN NUMBER, Cl_ID IN NUMBER, F_Name IN VARCHAR, L_Name IN VARCHAR, Email_Addr IN VARCHAR, Enrl_D IN DATE, End_D IN DATE, pswrd IN VARCHAR)
IS
BEGIN
INSERT INTO employee VALUES(Emp_Id, Is_Ins, Cl_ID, F_Name, L_Name, Email_Addr, Enrl_D, End_D, pswrd);
END insertEmp;
/

//DELETE FROM CLASSES
CREATE OR REPLACE PROCEDURE deleteClass(Cl_ID IN NUMBER)
IS
BEGIN
DELETE FROM classes WHERE Class_ID = Cl_ID;
END deleteClass;
/

//DELETE FROM COURSES
CREATE OR REPLACE PROCEDURE deleteCourse(Co_ID IN Number)
IS
BEGIN
DELETE FROM courses WHERE Course_ID = Co_ID;
END deleteCourse;
/

//DELETE FROM EMPLOYEE
CREATE OR REPLACE PROCEDURE deleteEmployee(Emp_ID IN Number)
IS
BEGIN
DELETE FROM employee WHERE Employee_ID = Emp_ID;
END deleteEmployee;
/

//UPDATE CLASS
CREATE OR REPLACE PROCEDURE updateClass(Cl_ID IN Number, Co_ID IN Number, Cap IN Number)
IS
BEGIN
UPDATE classes SET Course_ID = Co_ID, Capacity = Cap WHERE Class_ID = Cl_ID;
COMMIT;
END updateClass;
/

//UPDATE COURSE
CREATE OR REPLACE PROCEDURE updateCourse(Co_ID IN Number, Co_Name IN VARCHAR2, Co_Description IN VARCHAR2, Co_Level IN VARCHAR2)
IS
BEGIN
UPDATE courses SET Course_Name = Co_Name, Course_Description = Co_Description, Course_Level = Co_Level WHERE Course_ID = Co_ID;
COMMIT;
END updateCourse;
/

CREATE OR REPLACE PROCEDURE INSERT_ASSIGNMENT( aID in Number, cID in Number, descrip in varchar2, dateDue in date, mPoints in number, files in varchar2)
IS
BEGIN
  INSERT INTO ASSIGNMENTS
  VALUES(aID,cID,descrip,dateDue,mPoints,files);
END;
/
CREATE OR REPLACE PROCEDURE UPDATE_ASSIGNMENT( aID in Number, cID in Number, descrip in varchar2, dateDue in date, mPoints in number, files in varchar2)
IS
BEGIN
  UPDATE ASSIGNMENTS
  SET Class_ID = cID, Description = descrip, Due_Date = dateDue, Max_Points = mPoints, attached_files = files
  WHERE Assignment_id = aID;
END;
/
CREATE OR REPLACE PROCEDURE DELETE_ASSIGNMENT(aID in Number)
IS
BEGIN
  DELETE 
  FROM ASSIGNMENTS
  WHERE Assignment_ID = aID;
END;
/
CREATE OR REPLACE PROCEDURE INSERT_SUBMISSION(subID in number, aID in Number, stuID in Number, subDate in Date, newGrade in number, files in varchar2)
IS
BEGIN
  INSERT INTO STUDENT_SUBMISSIONS
  VALUES(subID,aID,stuID,subDate,newGrade,files); 
END;
/
CREATE OR REPLACE PROCEDURE UPDATE_SUBMISSION(subID in number, aID in Number, stuID in Number, subDate in Date, newGrade in number, files in varchar2)
IS
BEGIN
  UPDATE Student_Submissions
  SET Assignment_ID = aID, Student_ID = stuID, submission_date = subDate, grade = grade, attached_files = files
  WHERE Submission_ID = subID;
END;
/
CREATE OR REPLACE PROCEDURE DELETE_SUBMISSION(subID in number)
IS
BEGIN
  DELETE
  FROM Student_submissions
  WHERE Submission_ID = subID;
END;
/
CREATE OR REPLACE FUNCTION GET_GRADE(aID in Number, stuID in Number) return number
IS
  maxPoints number;
  actualGrade number;
BEGIN
  SELECT Max_Points INTO maxPoints
  FROM Assignments
  WHERE Assignment_ID = aID;
  
  SELECT grade INTO actualGrade
  FROM STUDENT_SUBMISSIONS
  WHERE Assignment_ID = aID and Student_ID = stuID;
  
  return actualGrade / maxPoints;
END;
/
